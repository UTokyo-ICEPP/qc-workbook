Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.8/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.8/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# „Ç∑„Éü„É•„É¨„Éº„Çø„ÅßÂÆüË°å
backend = Aer.get_backend('qasm_simulator')
job = execute(qc, backend=backend, shots=8000, seed_simulator=12345)
result = job.result()
count = result.get_counts()

score_sorted = sorted(count.items(), key=lambda x:x[1], reverse=True)
final_score = score_sorted[0:10]

print('Final score:')
print(final_score)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mQiskitError[0m                               Traceback (most recent call last)
Input [0;32mIn [3][0m, in [0;36m<cell line: 5>[0;34m()[0m
[1;32m      3[0m job [38;5;241m=[39m execute(qc, backend[38;5;241m=[39mbackend, shots[38;5;241m=[39m[38;5;241m8000[39m, seed_simulator[38;5;241m=[39m[38;5;241m12345[39m)
[1;32m      4[0m result [38;5;241m=[39m job[38;5;241m.[39mresult()
[0;32m----> 5[0m count [38;5;241m=[39m [43mresult[49m[38;5;241;43m.[39;49m[43mget_counts[49m[43m([49m[43m)[49m
[1;32m      7[0m score_sorted [38;5;241m=[39m [38;5;28msorted[39m(count[38;5;241m.[39mitems(), key[38;5;241m=[39m[38;5;28;01mlambda[39;00m x:x[[38;5;241m1[39m], reverse[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m      8[0m final_score [38;5;241m=[39m score_sorted[[38;5;241m0[39m:[38;5;241m10[39m]

File [0;32m/usr/local/lib/python3.8/dist-packages/qiskit/result/result.py:300[0m, in [0;36mResult.get_counts[0;34m(self, experiment)[0m
[1;32m    298[0m         dict_list[38;5;241m.[39mappend(statevector[38;5;241m.[39mStatevector(vec)[38;5;241m.[39mprobabilities_dict(decimals[38;5;241m=[39m[38;5;241m15[39m))
[1;32m    299[0m     [38;5;28;01melse[39;00m:
[0;32m--> 300[0m         [38;5;28;01mraise[39;00m QiskitError([38;5;124mf[39m[38;5;124m'[39m[38;5;124mNo counts for experiment [39m[38;5;124m"[39m[38;5;132;01m{[39;00m[38;5;28mrepr[39m(key)[38;5;132;01m}[39;00m[38;5;124m"[39m[38;5;124m'[39m)
[1;32m    302[0m [38;5;66;03m# Return first item of dict_list if size is 1[39;00m
[1;32m    303[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(dict_list) [38;5;241m==[39m [38;5;241m1[39m:

[0;31mQiskitError[0m: 'No counts for experiment "0"'
QiskitError: 'No counts for experiment "0"'

